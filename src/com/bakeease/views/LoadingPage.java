package com.bakeease.views;

/**
 *
 * @author piyushkarn
 */
public class LoadingPage extends javax.swing.JFrame {

    /**
     * Creates new form LoadingPage
     */
    public LoadingPage() {
        initComponents();
        loadingScreen();

    }

    private void loadingScreen() {
        new Thread(new Runnable() {
            @Override
            public void run() {
                try {
                    for (int i = 0; i <= 100; i++) {
                        loadingProgressBar.setValue(i); // Updates the progress bar value
                        Thread.sleep(50); // Delays the code by 50ms
                    }

                    new loginPage().setVisible(true);

                    dispose();

                } catch (Exception e) {
                    e.printStackTrace(); // Print exception details
                }
            }
        }).start();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        pnlLoadingScreen = new javax.swing.JPanel();
        loadingProgressBar = new javax.swing.JProgressBar();
        lblLoadingBackground = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        pnlLoadingScreen.setMaximumSize(new java.awt.Dimension(1400, 900));
        pnlLoadingScreen.setMinimumSize(new java.awt.Dimension(1400, 900));
        pnlLoadingScreen.setPreferredSize(new java.awt.Dimension(1400, 900));
        pnlLoadingScreen.setLayout(null);
        pnlLoadingScreen.add(loadingProgressBar);
        loadingProgressBar.setBounds(200, 750, 1030, 50);

        lblLoadingBackground.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/bakeease/resource/loading screen.png"))); // NOI18N
        lblLoadingBackground.setMaximumSize(new java.awt.Dimension(1400, 900));
        lblLoadingBackground.setMinimumSize(new java.awt.Dimension(1400, 900));
        lblLoadingBackground.setPreferredSize(new java.awt.Dimension(1400, 900));
        pnlLoadingScreen.add(lblLoadingBackground);
        lblLoadingBackground.setBounds(0, 0, 1400, 950);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(pnlLoadingScreen, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(pnlLoadingScreen, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(LoadingPage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(LoadingPage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(LoadingPage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(LoadingPage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new LoadingPage().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel lblLoadingBackground;
    private javax.swing.JProgressBar loadingProgressBar;
    private javax.swing.JPanel pnlLoadingScreen;
    // End of variables declaration//GEN-END:variables
}
